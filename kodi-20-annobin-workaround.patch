--- a/xbmc/cores/DllLoader/exports/CMakeLists.txt	2023-01-15 09:13:34.000000000 +0000
+++ b/xbmc/cores/DllLoader/exports/CMakeLists.txt	2023-01-27 16:32:08.489237276 +0000
@@ -17,9 +17,9 @@ elseif(NOT CORE_SYSTEM_NAME STREQUAL win
   add_library(wrapper OBJECT wrapper.c)
 
   if(USE_LTO)
-    add_custom_target(wrapper.def ALL ${CMAKE_NM} ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/wrapper.dir/wrapper.c.o | grep __wrap | awk '{ printf(\"%s \", \$\$3) }' | sed \"s/^/${CMAKE_C_COMPILE_OPTIONS_IPO} /\" | sed \"s/___wrap_/__wrap_/g\" | sed \"s/__wrap_/-Wl,-wrap,/g\" > wrapper.def && test -s wrapper.def)
+    add_custom_target(wrapper.def ALL ${CMAKE_NM} ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/wrapper.dir/wrapper.c.o | grep __wrap | awk '{ printf(\"%s \", \$\$3) }' | sed \"s/^/${CMAKE_C_COMPILE_OPTIONS_IPO} /\" | sed \"s/___wrap_/__wrap_/g\" | sed \"s/__wrap_/-Wl,-wrap,/g\" | sed \"s/.annobin//g\" | sed \"s/.text.//g\" > wrapper.def && test -s wrapper.def)
   else()
-    add_custom_target(wrapper.def ALL ${CMAKE_NM} ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/wrapper.dir/wrapper.c.o | grep __wrap | awk '{ printf(\"%s \", \$\$3) }' | sed \"s/___wrap_/__wrap_/g\" | sed \"s/__wrap_/-Wl,-wrap,/g\" > wrapper.def && test -s wrapper.def)
+    add_custom_target(wrapper.def ALL ${CMAKE_NM} ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/wrapper.dir/wrapper.c.o | grep __wrap | awk '{ printf(\"%s \", \$\$3) }' | sed \"s/___wrap_/__wrap_/g\" | sed \"s/__wrap_/-Wl,-wrap,/g\" | sed \"s/.annobin//g\" | sed \"s/.text.//g\" > wrapper.def && test -s wrapper.def)
   endif()
 
   if(CORE_SYSTEM_NAME STREQUAL android)
